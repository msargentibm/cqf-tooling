//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.0 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.06.22 at 04:42:11 PM MDT 
//


package org.opencds.cqf.testcase;

import org.jvnet.jaxb2_commons.lang.*;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;
import org.opencds.cqf.test.TestScript;

import javax.xml.bind.annotation.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="id" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="enabled" type="{http://www.w3.org/2001/XMLSchema}boolean"/&gt;
 *         &lt;element name="fhirVersion" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="description" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="loadArtifacts"&gt;
 *           &lt;complexType&gt;
 *             &lt;complexContent&gt;
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                 &lt;sequence&gt;
 *                   &lt;element name="resource" type="{}resourceItems" maxOccurs="unbounded" minOccurs="0"/&gt;
 *                   &lt;element name="gitHubResource" type="{}gitHubResourceItems" maxOccurs="unbounded" minOccurs="0"/&gt;
 *                   &lt;element name="bundle" type="{http://www.w3.org/2001/XMLSchema}string" maxOccurs="unbounded" minOccurs="0"/&gt;
 *                 &lt;/sequence&gt;
 *               &lt;/restriction&gt;
 *             &lt;/complexContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *         &lt;element name="test" maxOccurs="unbounded" minOccurs="0"&gt;
 *           &lt;complexType&gt;
 *             &lt;complexContent&gt;
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                 &lt;sequence&gt;
 *                   &lt;element name="id" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *                   &lt;element name="cdsServiceId" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *                   &lt;element name="requestJsonSource"&gt;
 *                     &lt;complexType&gt;
 *                       &lt;complexContent&gt;
 *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                           &lt;sequence&gt;
 *                             &lt;element name="resource" type="{}resourceItems" minOccurs="0"/&gt;
 *                             &lt;element name="gitHubResource" type="{}gitHubResourceItems" minOccurs="0"/&gt;
 *                           &lt;/sequence&gt;
 *                         &lt;/restriction&gt;
 *                       &lt;/complexContent&gt;
 *                     &lt;/complexType&gt;
 *                   &lt;/element&gt;
 *                   &lt;element name="expectedResponseJsonSource"&gt;
 *                     &lt;complexType&gt;
 *                       &lt;complexContent&gt;
 *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                           &lt;sequence&gt;
 *                             &lt;element name="resource" type="{}resourceItems" minOccurs="0"/&gt;
 *                             &lt;element name="gitHubResource" type="{}gitHubResourceItems" minOccurs="0"/&gt;
 *                           &lt;/sequence&gt;
 *                         &lt;/restriction&gt;
 *                       &lt;/complexContent&gt;
 *                     &lt;/complexType&gt;
 *                   &lt;/element&gt;
 *                 &lt;/sequence&gt;
 *               &lt;/restriction&gt;
 *             &lt;/complexContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "id",
    "enabled",
    "fhirVersion",
    "description",
    "loadArtifacts",
    "test"
})
@XmlRootElement(name = "CDSHooksTestScript")
public class CDSHooksTestScript
    extends TestScript
    implements Equals, HashCode, ToString
{

    @XmlElement(required = true)
    protected String id;
    protected boolean enabled;
    @XmlElement(required = true)
    protected String fhirVersion;
    @XmlElement(required = true)
    protected String description;
    @XmlElement(required = true)
    protected CDSHooksTestScript.LoadArtifacts loadArtifacts;
    protected List<Test> test;

    /**
     * Gets the value of the id property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getId() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setId(String value) {
        this.id = value;
    }

    /**
     * Gets the value of the enabled property.
     * 
     */
    public boolean isEnabled() {
        return enabled;
    }

    /**
     * Sets the value of the enabled property.
     * 
     */
    public void setEnabled(boolean value) {
        this.enabled = value;
    }

    /**
     * Gets the value of the fhirVersion property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getFhirVersion() {
        return fhirVersion;
    }

    /**
     * Sets the value of the fhirVersion property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFhirVersion(String value) {
        this.fhirVersion = value;
    }

    /**
     * Gets the value of the description property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDescription() {
        return description;
    }

    /**
     * Sets the value of the description property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDescription(String value) {
        this.description = value;
    }

    /**
     * Gets the value of the loadArtifacts property.
     * 
     * @return
     *     possible object is
     *     {@link CDSHooksTestScript.LoadArtifacts }
     *     
     */
    public CDSHooksTestScript.LoadArtifacts getLoadArtifacts() {
        return loadArtifacts;
    }

    /**
     * Sets the value of the loadArtifacts property.
     * 
     * @param value
     *     allowed object is
     *     {@link CDSHooksTestScript.LoadArtifacts }
     *     
     */
    public void setLoadArtifacts(CDSHooksTestScript.LoadArtifacts value) {
        this.loadArtifacts = value;
    }

    /**
     * Gets the value of the test property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the test property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getTest().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CDSHooksTestScript.Test }
     * 
     * 
     */
    public List<Test> getTest() {
        if (test == null) {
            test = new ArrayList<Test>();
        }
        return this.test;
    }

    public CDSHooksTestScript withId(String value) {
        setId(value);
        return this;
    }

    public CDSHooksTestScript withEnabled(boolean value) {
        setEnabled(value);
        return this;
    }

    public CDSHooksTestScript withFhirVersion(String value) {
        setFhirVersion(value);
        return this;
    }

    public CDSHooksTestScript withDescription(String value) {
        setDescription(value);
        return this;
    }

    public CDSHooksTestScript withLoadArtifacts(CDSHooksTestScript.LoadArtifacts value) {
        setLoadArtifacts(value);
        return this;
    }

    public CDSHooksTestScript withTest(CDSHooksTestScript.Test... values) {
        if (values!= null) {
            for (CDSHooksTestScript.Test value: values) {
                getTest().add(value);
            }
        }
        return this;
    }

    public CDSHooksTestScript withTest(Collection<Test> values) {
        if (values!= null) {
            getTest().addAll(values);
        }
        return this;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof CDSHooksTestScript)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final CDSHooksTestScript that = ((CDSHooksTestScript) object);
        {
            String lhsId;
            lhsId = this.getId();
            String rhsId;
            rhsId = that.getId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "id", lhsId), LocatorUtils.property(thatLocator, "id", rhsId), lhsId, rhsId)) {
                return false;
            }
        }
        {
            boolean lhsEnabled;
            lhsEnabled = this.isEnabled();
            boolean rhsEnabled;
            rhsEnabled = that.isEnabled();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "enabled", lhsEnabled), LocatorUtils.property(thatLocator, "enabled", rhsEnabled), lhsEnabled, rhsEnabled)) {
                return false;
            }
        }
        {
            String lhsFhirVersion;
            lhsFhirVersion = this.getFhirVersion();
            String rhsFhirVersion;
            rhsFhirVersion = that.getFhirVersion();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "fhirVersion", lhsFhirVersion), LocatorUtils.property(thatLocator, "fhirVersion", rhsFhirVersion), lhsFhirVersion, rhsFhirVersion)) {
                return false;
            }
        }
        {
            String lhsDescription;
            lhsDescription = this.getDescription();
            String rhsDescription;
            rhsDescription = that.getDescription();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "description", lhsDescription), LocatorUtils.property(thatLocator, "description", rhsDescription), lhsDescription, rhsDescription)) {
                return false;
            }
        }
        {
            CDSHooksTestScript.LoadArtifacts lhsLoadArtifacts;
            lhsLoadArtifacts = this.getLoadArtifacts();
            CDSHooksTestScript.LoadArtifacts rhsLoadArtifacts;
            rhsLoadArtifacts = that.getLoadArtifacts();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "loadArtifacts", lhsLoadArtifacts), LocatorUtils.property(thatLocator, "loadArtifacts", rhsLoadArtifacts), lhsLoadArtifacts, rhsLoadArtifacts)) {
                return false;
            }
        }
        {
            List<Test> lhsTest;
            lhsTest = (((this.test!= null)&&(!this.test.isEmpty()))?this.getTest():null);
            List<Test> rhsTest;
            rhsTest = (((that.test!= null)&&(!that.test.isEmpty()))?that.getTest():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "test", lhsTest), LocatorUtils.property(thatLocator, "test", rhsTest), lhsTest, rhsTest)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theId;
            theId = this.getId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "id", theId), currentHashCode, theId);
        }
        {
            boolean theEnabled;
            theEnabled = this.isEnabled();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "enabled", theEnabled), currentHashCode, theEnabled);
        }
        {
            String theFhirVersion;
            theFhirVersion = this.getFhirVersion();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "fhirVersion", theFhirVersion), currentHashCode, theFhirVersion);
        }
        {
            String theDescription;
            theDescription = this.getDescription();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "description", theDescription), currentHashCode, theDescription);
        }
        {
            CDSHooksTestScript.LoadArtifacts theLoadArtifacts;
            theLoadArtifacts = this.getLoadArtifacts();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "loadArtifacts", theLoadArtifacts), currentHashCode, theLoadArtifacts);
        }
        {
            List<Test> theTest;
            theTest = (((this.test!= null)&&(!this.test.isEmpty()))?this.getTest():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "test", theTest), currentHashCode, theTest);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            String theId;
            theId = this.getId();
            strategy.appendField(locator, this, "id", buffer, theId);
        }
        {
            boolean theEnabled;
            theEnabled = this.isEnabled();
            strategy.appendField(locator, this, "enabled", buffer, theEnabled);
        }
        {
            String theFhirVersion;
            theFhirVersion = this.getFhirVersion();
            strategy.appendField(locator, this, "fhirVersion", buffer, theFhirVersion);
        }
        {
            String theDescription;
            theDescription = this.getDescription();
            strategy.appendField(locator, this, "description", buffer, theDescription);
        }
        {
            CDSHooksTestScript.LoadArtifacts theLoadArtifacts;
            theLoadArtifacts = this.getLoadArtifacts();
            strategy.appendField(locator, this, "loadArtifacts", buffer, theLoadArtifacts);
        }
        {
            List<Test> theTest;
            theTest = (((this.test!= null)&&(!this.test.isEmpty()))?this.getTest():null);
            strategy.appendField(locator, this, "test", buffer, theTest);
        }
        return buffer;
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;complexContent&gt;
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *       &lt;sequence&gt;
     *         &lt;element name="resource" type="{}resourceItems" maxOccurs="unbounded" minOccurs="0"/&gt;
     *         &lt;element name="gitHubResource" type="{}gitHubResourceItems" maxOccurs="unbounded" minOccurs="0"/&gt;
     *         &lt;element name="bundle" type="{http://www.w3.org/2001/XMLSchema}string" maxOccurs="unbounded" minOccurs="0"/&gt;
     *       &lt;/sequence&gt;
     *     &lt;/restriction&gt;
     *   &lt;/complexContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "resource",
        "gitHubResource",
        "bundle"
    })
    public static class LoadArtifacts
        implements Equals, HashCode, ToString
    {

        protected List<ResourceItems> resource;
        protected List<GitHubResourceItems> gitHubResource;
        protected List<String> bundle;

        /**
         * Gets the value of the resource property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the resource property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getResource().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link ResourceItems }
         * 
         * 
         */
        public List<ResourceItems> getResource() {
            if (resource == null) {
                resource = new ArrayList<ResourceItems>();
            }
            return this.resource;
        }

        /**
         * Gets the value of the gitHubResource property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the gitHubResource property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getGitHubResource().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link GitHubResourceItems }
         * 
         * 
         */
        public List<GitHubResourceItems> getGitHubResource() {
            if (gitHubResource == null) {
                gitHubResource = new ArrayList<GitHubResourceItems>();
            }
            return this.gitHubResource;
        }

        /**
         * Gets the value of the bundle property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the bundle property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getBundle().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link String }
         * 
         * 
         */
        public List<String> getBundle() {
            if (bundle == null) {
                bundle = new ArrayList<String>();
            }
            return this.bundle;
        }

        public CDSHooksTestScript.LoadArtifacts withResource(ResourceItems... values) {
            if (values!= null) {
                for (ResourceItems value: values) {
                    getResource().add(value);
                }
            }
            return this;
        }

        public CDSHooksTestScript.LoadArtifacts withResource(Collection<ResourceItems> values) {
            if (values!= null) {
                getResource().addAll(values);
            }
            return this;
        }

        public CDSHooksTestScript.LoadArtifacts withGitHubResource(GitHubResourceItems... values) {
            if (values!= null) {
                for (GitHubResourceItems value: values) {
                    getGitHubResource().add(value);
                }
            }
            return this;
        }

        public CDSHooksTestScript.LoadArtifacts withGitHubResource(Collection<GitHubResourceItems> values) {
            if (values!= null) {
                getGitHubResource().addAll(values);
            }
            return this;
        }

        public CDSHooksTestScript.LoadArtifacts withBundle(String... values) {
            if (values!= null) {
                for (String value: values) {
                    getBundle().add(value);
                }
            }
            return this;
        }

        public CDSHooksTestScript.LoadArtifacts withBundle(Collection<String> values) {
            if (values!= null) {
                getBundle().addAll(values);
            }
            return this;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof CDSHooksTestScript.LoadArtifacts)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final CDSHooksTestScript.LoadArtifacts that = ((CDSHooksTestScript.LoadArtifacts) object);
            {
                List<ResourceItems> lhsResource;
                lhsResource = (((this.resource!= null)&&(!this.resource.isEmpty()))?this.getResource():null);
                List<ResourceItems> rhsResource;
                rhsResource = (((that.resource!= null)&&(!that.resource.isEmpty()))?that.getResource():null);
                if (!strategy.equals(LocatorUtils.property(thisLocator, "resource", lhsResource), LocatorUtils.property(thatLocator, "resource", rhsResource), lhsResource, rhsResource)) {
                    return false;
                }
            }
            {
                List<GitHubResourceItems> lhsGitHubResource;
                lhsGitHubResource = (((this.gitHubResource!= null)&&(!this.gitHubResource.isEmpty()))?this.getGitHubResource():null);
                List<GitHubResourceItems> rhsGitHubResource;
                rhsGitHubResource = (((that.gitHubResource!= null)&&(!that.gitHubResource.isEmpty()))?that.getGitHubResource():null);
                if (!strategy.equals(LocatorUtils.property(thisLocator, "gitHubResource", lhsGitHubResource), LocatorUtils.property(thatLocator, "gitHubResource", rhsGitHubResource), lhsGitHubResource, rhsGitHubResource)) {
                    return false;
                }
            }
            {
                List<String> lhsBundle;
                lhsBundle = (((this.bundle!= null)&&(!this.bundle.isEmpty()))?this.getBundle():null);
                List<String> rhsBundle;
                rhsBundle = (((that.bundle!= null)&&(!that.bundle.isEmpty()))?that.getBundle():null);
                if (!strategy.equals(LocatorUtils.property(thisLocator, "bundle", lhsBundle), LocatorUtils.property(thatLocator, "bundle", rhsBundle), lhsBundle, rhsBundle)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                List<ResourceItems> theResource;
                theResource = (((this.resource!= null)&&(!this.resource.isEmpty()))?this.getResource():null);
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "resource", theResource), currentHashCode, theResource);
            }
            {
                List<GitHubResourceItems> theGitHubResource;
                theGitHubResource = (((this.gitHubResource!= null)&&(!this.gitHubResource.isEmpty()))?this.getGitHubResource():null);
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "gitHubResource", theGitHubResource), currentHashCode, theGitHubResource);
            }
            {
                List<String> theBundle;
                theBundle = (((this.bundle!= null)&&(!this.bundle.isEmpty()))?this.getBundle():null);
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "bundle", theBundle), currentHashCode, theBundle);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                List<ResourceItems> theResource;
                theResource = (((this.resource!= null)&&(!this.resource.isEmpty()))?this.getResource():null);
                strategy.appendField(locator, this, "resource", buffer, theResource);
            }
            {
                List<GitHubResourceItems> theGitHubResource;
                theGitHubResource = (((this.gitHubResource!= null)&&(!this.gitHubResource.isEmpty()))?this.getGitHubResource():null);
                strategy.appendField(locator, this, "gitHubResource", buffer, theGitHubResource);
            }
            {
                List<String> theBundle;
                theBundle = (((this.bundle!= null)&&(!this.bundle.isEmpty()))?this.getBundle():null);
                strategy.appendField(locator, this, "bundle", buffer, theBundle);
            }
            return buffer;
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;complexContent&gt;
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *       &lt;sequence&gt;
     *         &lt;element name="id" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
     *         &lt;element name="cdsServiceId" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
     *         &lt;element name="requestJsonSource"&gt;
     *           &lt;complexType&gt;
     *             &lt;complexContent&gt;
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *                 &lt;sequence&gt;
     *                   &lt;element name="resource" type="{}resourceItems" minOccurs="0"/&gt;
     *                   &lt;element name="gitHubResource" type="{}gitHubResourceItems" minOccurs="0"/&gt;
     *                 &lt;/sequence&gt;
     *               &lt;/restriction&gt;
     *             &lt;/complexContent&gt;
     *           &lt;/complexType&gt;
     *         &lt;/element&gt;
     *         &lt;element name="expectedResponseJsonSource"&gt;
     *           &lt;complexType&gt;
     *             &lt;complexContent&gt;
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *                 &lt;sequence&gt;
     *                   &lt;element name="resource" type="{}resourceItems" minOccurs="0"/&gt;
     *                   &lt;element name="gitHubResource" type="{}gitHubResourceItems" minOccurs="0"/&gt;
     *                 &lt;/sequence&gt;
     *               &lt;/restriction&gt;
     *             &lt;/complexContent&gt;
     *           &lt;/complexType&gt;
     *         &lt;/element&gt;
     *       &lt;/sequence&gt;
     *     &lt;/restriction&gt;
     *   &lt;/complexContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "id",
        "cdsServiceId",
        "requestJsonSource",
        "expectedResponseJsonSource"
    })
    public static class Test
        implements Equals, HashCode, ToString
    {

        @XmlElement(required = true)
        protected String id;
        @XmlElement(required = true)
        protected String cdsServiceId;
        @XmlElement(required = true)
        protected CDSHooksTestScript.Test.RequestJsonSource requestJsonSource;
        @XmlElement(required = true)
        protected CDSHooksTestScript.Test.ExpectedResponseJsonSource expectedResponseJsonSource;

        /**
         * Gets the value of the id property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getId() {
            return id;
        }

        /**
         * Sets the value of the id property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setId(String value) {
            this.id = value;
        }

        /**
         * Gets the value of the cdsServiceId property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getCdsServiceId() {
            return cdsServiceId;
        }

        /**
         * Sets the value of the cdsServiceId property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setCdsServiceId(String value) {
            this.cdsServiceId = value;
        }

        /**
         * Gets the value of the requestJsonSource property.
         * 
         * @return
         *     possible object is
         *     {@link CDSHooksTestScript.Test.RequestJsonSource }
         *     
         */
        public CDSHooksTestScript.Test.RequestJsonSource getRequestJsonSource() {
            return requestJsonSource;
        }

        /**
         * Sets the value of the requestJsonSource property.
         * 
         * @param value
         *     allowed object is
         *     {@link CDSHooksTestScript.Test.RequestJsonSource }
         *     
         */
        public void setRequestJsonSource(CDSHooksTestScript.Test.RequestJsonSource value) {
            this.requestJsonSource = value;
        }

        /**
         * Gets the value of the expectedResponseJsonSource property.
         * 
         * @return
         *     possible object is
         *     {@link CDSHooksTestScript.Test.ExpectedResponseJsonSource }
         *     
         */
        public CDSHooksTestScript.Test.ExpectedResponseJsonSource getExpectedResponseJsonSource() {
            return expectedResponseJsonSource;
        }

        /**
         * Sets the value of the expectedResponseJsonSource property.
         * 
         * @param value
         *     allowed object is
         *     {@link CDSHooksTestScript.Test.ExpectedResponseJsonSource }
         *     
         */
        public void setExpectedResponseJsonSource(CDSHooksTestScript.Test.ExpectedResponseJsonSource value) {
            this.expectedResponseJsonSource = value;
        }

        public CDSHooksTestScript.Test withId(String value) {
            setId(value);
            return this;
        }

        public CDSHooksTestScript.Test withCdsServiceId(String value) {
            setCdsServiceId(value);
            return this;
        }

        public CDSHooksTestScript.Test withRequestJsonSource(CDSHooksTestScript.Test.RequestJsonSource value) {
            setRequestJsonSource(value);
            return this;
        }

        public CDSHooksTestScript.Test withExpectedResponseJsonSource(CDSHooksTestScript.Test.ExpectedResponseJsonSource value) {
            setExpectedResponseJsonSource(value);
            return this;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof CDSHooksTestScript.Test)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final CDSHooksTestScript.Test that = ((CDSHooksTestScript.Test) object);
            {
                String lhsId;
                lhsId = this.getId();
                String rhsId;
                rhsId = that.getId();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "id", lhsId), LocatorUtils.property(thatLocator, "id", rhsId), lhsId, rhsId)) {
                    return false;
                }
            }
            {
                String lhsCdsServiceId;
                lhsCdsServiceId = this.getCdsServiceId();
                String rhsCdsServiceId;
                rhsCdsServiceId = that.getCdsServiceId();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "cdsServiceId", lhsCdsServiceId), LocatorUtils.property(thatLocator, "cdsServiceId", rhsCdsServiceId), lhsCdsServiceId, rhsCdsServiceId)) {
                    return false;
                }
            }
            {
                CDSHooksTestScript.Test.RequestJsonSource lhsRequestJsonSource;
                lhsRequestJsonSource = this.getRequestJsonSource();
                CDSHooksTestScript.Test.RequestJsonSource rhsRequestJsonSource;
                rhsRequestJsonSource = that.getRequestJsonSource();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "requestJsonSource", lhsRequestJsonSource), LocatorUtils.property(thatLocator, "requestJsonSource", rhsRequestJsonSource), lhsRequestJsonSource, rhsRequestJsonSource)) {
                    return false;
                }
            }
            {
                CDSHooksTestScript.Test.ExpectedResponseJsonSource lhsExpectedResponseJsonSource;
                lhsExpectedResponseJsonSource = this.getExpectedResponseJsonSource();
                CDSHooksTestScript.Test.ExpectedResponseJsonSource rhsExpectedResponseJsonSource;
                rhsExpectedResponseJsonSource = that.getExpectedResponseJsonSource();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "expectedResponseJsonSource", lhsExpectedResponseJsonSource), LocatorUtils.property(thatLocator, "expectedResponseJsonSource", rhsExpectedResponseJsonSource), lhsExpectedResponseJsonSource, rhsExpectedResponseJsonSource)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                String theId;
                theId = this.getId();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "id", theId), currentHashCode, theId);
            }
            {
                String theCdsServiceId;
                theCdsServiceId = this.getCdsServiceId();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "cdsServiceId", theCdsServiceId), currentHashCode, theCdsServiceId);
            }
            {
                CDSHooksTestScript.Test.RequestJsonSource theRequestJsonSource;
                theRequestJsonSource = this.getRequestJsonSource();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "requestJsonSource", theRequestJsonSource), currentHashCode, theRequestJsonSource);
            }
            {
                CDSHooksTestScript.Test.ExpectedResponseJsonSource theExpectedResponseJsonSource;
                theExpectedResponseJsonSource = this.getExpectedResponseJsonSource();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "expectedResponseJsonSource", theExpectedResponseJsonSource), currentHashCode, theExpectedResponseJsonSource);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                String theId;
                theId = this.getId();
                strategy.appendField(locator, this, "id", buffer, theId);
            }
            {
                String theCdsServiceId;
                theCdsServiceId = this.getCdsServiceId();
                strategy.appendField(locator, this, "cdsServiceId", buffer, theCdsServiceId);
            }
            {
                CDSHooksTestScript.Test.RequestJsonSource theRequestJsonSource;
                theRequestJsonSource = this.getRequestJsonSource();
                strategy.appendField(locator, this, "requestJsonSource", buffer, theRequestJsonSource);
            }
            {
                CDSHooksTestScript.Test.ExpectedResponseJsonSource theExpectedResponseJsonSource;
                theExpectedResponseJsonSource = this.getExpectedResponseJsonSource();
                strategy.appendField(locator, this, "expectedResponseJsonSource", buffer, theExpectedResponseJsonSource);
            }
            return buffer;
        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType&gt;
         *   &lt;complexContent&gt;
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
         *       &lt;sequence&gt;
         *         &lt;element name="resource" type="{}resourceItems" minOccurs="0"/&gt;
         *         &lt;element name="gitHubResource" type="{}gitHubResourceItems" minOccurs="0"/&gt;
         *       &lt;/sequence&gt;
         *     &lt;/restriction&gt;
         *   &lt;/complexContent&gt;
         * &lt;/complexType&gt;
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "resource",
            "gitHubResource"
        })
        public static class ExpectedResponseJsonSource
            implements Equals, HashCode, ToString
        {

            protected ResourceItems resource;
            protected GitHubResourceItems gitHubResource;

            /**
             * Gets the value of the resource property.
             * 
             * @return
             *     possible object is
             *     {@link ResourceItems }
             *     
             */
            public ResourceItems getResource() {
                return resource;
            }

            /**
             * Sets the value of the resource property.
             * 
             * @param value
             *     allowed object is
             *     {@link ResourceItems }
             *     
             */
            public void setResource(ResourceItems value) {
                this.resource = value;
            }

            /**
             * Gets the value of the gitHubResource property.
             * 
             * @return
             *     possible object is
             *     {@link GitHubResourceItems }
             *     
             */
            public GitHubResourceItems getGitHubResource() {
                return gitHubResource;
            }

            /**
             * Sets the value of the gitHubResource property.
             * 
             * @param value
             *     allowed object is
             *     {@link GitHubResourceItems }
             *     
             */
            public void setGitHubResource(GitHubResourceItems value) {
                this.gitHubResource = value;
            }

            public CDSHooksTestScript.Test.ExpectedResponseJsonSource withResource(ResourceItems value) {
                setResource(value);
                return this;
            }

            public CDSHooksTestScript.Test.ExpectedResponseJsonSource withGitHubResource(GitHubResourceItems value) {
                setGitHubResource(value);
                return this;
            }

            public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
                if (!(object instanceof CDSHooksTestScript.Test.ExpectedResponseJsonSource)) {
                    return false;
                }
                if (this == object) {
                    return true;
                }
                final CDSHooksTestScript.Test.ExpectedResponseJsonSource that = ((CDSHooksTestScript.Test.ExpectedResponseJsonSource) object);
                {
                    ResourceItems lhsResource;
                    lhsResource = this.getResource();
                    ResourceItems rhsResource;
                    rhsResource = that.getResource();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "resource", lhsResource), LocatorUtils.property(thatLocator, "resource", rhsResource), lhsResource, rhsResource)) {
                        return false;
                    }
                }
                {
                    GitHubResourceItems lhsGitHubResource;
                    lhsGitHubResource = this.getGitHubResource();
                    GitHubResourceItems rhsGitHubResource;
                    rhsGitHubResource = that.getGitHubResource();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "gitHubResource", lhsGitHubResource), LocatorUtils.property(thatLocator, "gitHubResource", rhsGitHubResource), lhsGitHubResource, rhsGitHubResource)) {
                        return false;
                    }
                }
                return true;
            }

            public boolean equals(Object object) {
                final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
                return equals(null, null, object, strategy);
            }

            public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
                int currentHashCode = 1;
                {
                    ResourceItems theResource;
                    theResource = this.getResource();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "resource", theResource), currentHashCode, theResource);
                }
                {
                    GitHubResourceItems theGitHubResource;
                    theGitHubResource = this.getGitHubResource();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "gitHubResource", theGitHubResource), currentHashCode, theGitHubResource);
                }
                return currentHashCode;
            }

            public int hashCode() {
                final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
                return this.hashCode(null, strategy);
            }

            public String toString() {
                final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
                final StringBuilder buffer = new StringBuilder();
                append(null, buffer, strategy);
                return buffer.toString();
            }

            public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
                strategy.appendStart(locator, this, buffer);
                appendFields(locator, buffer, strategy);
                strategy.appendEnd(locator, this, buffer);
                return buffer;
            }

            public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
                {
                    ResourceItems theResource;
                    theResource = this.getResource();
                    strategy.appendField(locator, this, "resource", buffer, theResource);
                }
                {
                    GitHubResourceItems theGitHubResource;
                    theGitHubResource = this.getGitHubResource();
                    strategy.appendField(locator, this, "gitHubResource", buffer, theGitHubResource);
                }
                return buffer;
            }

        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType&gt;
         *   &lt;complexContent&gt;
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
         *       &lt;sequence&gt;
         *         &lt;element name="resource" type="{}resourceItems" minOccurs="0"/&gt;
         *         &lt;element name="gitHubResource" type="{}gitHubResourceItems" minOccurs="0"/&gt;
         *       &lt;/sequence&gt;
         *     &lt;/restriction&gt;
         *   &lt;/complexContent&gt;
         * &lt;/complexType&gt;
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "resource",
            "gitHubResource"
        })
        public static class RequestJsonSource
            implements Equals, HashCode, ToString
        {

            protected ResourceItems resource;
            protected GitHubResourceItems gitHubResource;

            /**
             * Gets the value of the resource property.
             * 
             * @return
             *     possible object is
             *     {@link ResourceItems }
             *     
             */
            public ResourceItems getResource() {
                return resource;
            }

            /**
             * Sets the value of the resource property.
             * 
             * @param value
             *     allowed object is
             *     {@link ResourceItems }
             *     
             */
            public void setResource(ResourceItems value) {
                this.resource = value;
            }

            /**
             * Gets the value of the gitHubResource property.
             * 
             * @return
             *     possible object is
             *     {@link GitHubResourceItems }
             *     
             */
            public GitHubResourceItems getGitHubResource() {
                return gitHubResource;
            }

            /**
             * Sets the value of the gitHubResource property.
             * 
             * @param value
             *     allowed object is
             *     {@link GitHubResourceItems }
             *     
             */
            public void setGitHubResource(GitHubResourceItems value) {
                this.gitHubResource = value;
            }

            public CDSHooksTestScript.Test.RequestJsonSource withResource(ResourceItems value) {
                setResource(value);
                return this;
            }

            public CDSHooksTestScript.Test.RequestJsonSource withGitHubResource(GitHubResourceItems value) {
                setGitHubResource(value);
                return this;
            }

            public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
                if (!(object instanceof CDSHooksTestScript.Test.RequestJsonSource)) {
                    return false;
                }
                if (this == object) {
                    return true;
                }
                final CDSHooksTestScript.Test.RequestJsonSource that = ((CDSHooksTestScript.Test.RequestJsonSource) object);
                {
                    ResourceItems lhsResource;
                    lhsResource = this.getResource();
                    ResourceItems rhsResource;
                    rhsResource = that.getResource();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "resource", lhsResource), LocatorUtils.property(thatLocator, "resource", rhsResource), lhsResource, rhsResource)) {
                        return false;
                    }
                }
                {
                    GitHubResourceItems lhsGitHubResource;
                    lhsGitHubResource = this.getGitHubResource();
                    GitHubResourceItems rhsGitHubResource;
                    rhsGitHubResource = that.getGitHubResource();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "gitHubResource", lhsGitHubResource), LocatorUtils.property(thatLocator, "gitHubResource", rhsGitHubResource), lhsGitHubResource, rhsGitHubResource)) {
                        return false;
                    }
                }
                return true;
            }

            public boolean equals(Object object) {
                final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
                return equals(null, null, object, strategy);
            }

            public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
                int currentHashCode = 1;
                {
                    ResourceItems theResource;
                    theResource = this.getResource();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "resource", theResource), currentHashCode, theResource);
                }
                {
                    GitHubResourceItems theGitHubResource;
                    theGitHubResource = this.getGitHubResource();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "gitHubResource", theGitHubResource), currentHashCode, theGitHubResource);
                }
                return currentHashCode;
            }

            public int hashCode() {
                final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
                return this.hashCode(null, strategy);
            }

            public String toString() {
                final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
                final StringBuilder buffer = new StringBuilder();
                append(null, buffer, strategy);
                return buffer.toString();
            }

            public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
                strategy.appendStart(locator, this, buffer);
                appendFields(locator, buffer, strategy);
                strategy.appendEnd(locator, this, buffer);
                return buffer;
            }

            public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
                {
                    ResourceItems theResource;
                    theResource = this.getResource();
                    strategy.appendField(locator, this, "resource", buffer, theResource);
                }
                {
                    GitHubResourceItems theGitHubResource;
                    theGitHubResource = this.getGitHubResource();
                    strategy.appendField(locator, this, "gitHubResource", buffer, theGitHubResource);
                }
                return buffer;
            }

        }

    }

}
