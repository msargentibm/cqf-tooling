//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.0 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.06.22 at 04:42:11 PM MDT 
//


package org.opencds.cqf.testcase;

import org.jvnet.jaxb2_commons.lang.*;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import java.math.BigDecimal;
import java.math.BigInteger;


/**
 * <p>Java class for groupItems complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="groupItems"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="id" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="initial-population" type="{http://www.w3.org/2001/XMLSchema}integer"/&gt;
 *         &lt;element name="denominator" type="{http://www.w3.org/2001/XMLSchema}integer"/&gt;
 *         &lt;element name="numerator" type="{http://www.w3.org/2001/XMLSchema}integer"/&gt;
 *         &lt;element name="denominator-exclusion" type="{http://www.w3.org/2001/XMLSchema}integer"/&gt;
 *         &lt;element name="measure-score" type="{http://www.w3.org/2001/XMLSchema}decimal"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "groupItems", propOrder = {
    "id",
    "initialPopulation",
    "denominator",
    "numerator",
    "denominatorExclusion",
    "measureScore"
})
public class GroupItems
    implements Equals, HashCode, ToString
{

    @XmlElement(required = true)
    protected String id;
    @XmlElement(name = "initial-population", required = true)
    protected BigInteger initialPopulation;
    @XmlElement(required = true)
    protected BigInteger denominator;
    @XmlElement(required = true)
    protected BigInteger numerator;
    @XmlElement(name = "denominator-exclusion", required = true)
    protected BigInteger denominatorExclusion;
    @XmlElement(name = "measure-score", required = true)
    protected BigDecimal measureScore;

    /**
     * Gets the value of the id property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getId() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setId(String value) {
        this.id = value;
    }

    /**
     * Gets the value of the initialPopulation property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getInitialPopulation() {
        return initialPopulation;
    }

    /**
     * Sets the value of the initialPopulation property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setInitialPopulation(BigInteger value) {
        this.initialPopulation = value;
    }

    /**
     * Gets the value of the denominator property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getDenominator() {
        return denominator;
    }

    /**
     * Sets the value of the denominator property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setDenominator(BigInteger value) {
        this.denominator = value;
    }

    /**
     * Gets the value of the numerator property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getNumerator() {
        return numerator;
    }

    /**
     * Sets the value of the numerator property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setNumerator(BigInteger value) {
        this.numerator = value;
    }

    /**
     * Gets the value of the denominatorExclusion property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getDenominatorExclusion() {
        return denominatorExclusion;
    }

    /**
     * Sets the value of the denominatorExclusion property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setDenominatorExclusion(BigInteger value) {
        this.denominatorExclusion = value;
    }

    /**
     * Gets the value of the measureScore property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getMeasureScore() {
        return measureScore;
    }

    /**
     * Sets the value of the measureScore property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setMeasureScore(BigDecimal value) {
        this.measureScore = value;
    }

    public GroupItems withId(String value) {
        setId(value);
        return this;
    }

    public GroupItems withInitialPopulation(BigInteger value) {
        setInitialPopulation(value);
        return this;
    }

    public GroupItems withDenominator(BigInteger value) {
        setDenominator(value);
        return this;
    }

    public GroupItems withNumerator(BigInteger value) {
        setNumerator(value);
        return this;
    }

    public GroupItems withDenominatorExclusion(BigInteger value) {
        setDenominatorExclusion(value);
        return this;
    }

    public GroupItems withMeasureScore(BigDecimal value) {
        setMeasureScore(value);
        return this;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof GroupItems)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final GroupItems that = ((GroupItems) object);
        {
            String lhsId;
            lhsId = this.getId();
            String rhsId;
            rhsId = that.getId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "id", lhsId), LocatorUtils.property(thatLocator, "id", rhsId), lhsId, rhsId)) {
                return false;
            }
        }
        {
            BigInteger lhsInitialPopulation;
            lhsInitialPopulation = this.getInitialPopulation();
            BigInteger rhsInitialPopulation;
            rhsInitialPopulation = that.getInitialPopulation();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "initialPopulation", lhsInitialPopulation), LocatorUtils.property(thatLocator, "initialPopulation", rhsInitialPopulation), lhsInitialPopulation, rhsInitialPopulation)) {
                return false;
            }
        }
        {
            BigInteger lhsDenominator;
            lhsDenominator = this.getDenominator();
            BigInteger rhsDenominator;
            rhsDenominator = that.getDenominator();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "denominator", lhsDenominator), LocatorUtils.property(thatLocator, "denominator", rhsDenominator), lhsDenominator, rhsDenominator)) {
                return false;
            }
        }
        {
            BigInteger lhsNumerator;
            lhsNumerator = this.getNumerator();
            BigInteger rhsNumerator;
            rhsNumerator = that.getNumerator();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "numerator", lhsNumerator), LocatorUtils.property(thatLocator, "numerator", rhsNumerator), lhsNumerator, rhsNumerator)) {
                return false;
            }
        }
        {
            BigInteger lhsDenominatorExclusion;
            lhsDenominatorExclusion = this.getDenominatorExclusion();
            BigInteger rhsDenominatorExclusion;
            rhsDenominatorExclusion = that.getDenominatorExclusion();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "denominatorExclusion", lhsDenominatorExclusion), LocatorUtils.property(thatLocator, "denominatorExclusion", rhsDenominatorExclusion), lhsDenominatorExclusion, rhsDenominatorExclusion)) {
                return false;
            }
        }
        {
            BigDecimal lhsMeasureScore;
            lhsMeasureScore = this.getMeasureScore();
            BigDecimal rhsMeasureScore;
            rhsMeasureScore = that.getMeasureScore();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "measureScore", lhsMeasureScore), LocatorUtils.property(thatLocator, "measureScore", rhsMeasureScore), lhsMeasureScore, rhsMeasureScore)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theId;
            theId = this.getId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "id", theId), currentHashCode, theId);
        }
        {
            BigInteger theInitialPopulation;
            theInitialPopulation = this.getInitialPopulation();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "initialPopulation", theInitialPopulation), currentHashCode, theInitialPopulation);
        }
        {
            BigInteger theDenominator;
            theDenominator = this.getDenominator();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "denominator", theDenominator), currentHashCode, theDenominator);
        }
        {
            BigInteger theNumerator;
            theNumerator = this.getNumerator();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "numerator", theNumerator), currentHashCode, theNumerator);
        }
        {
            BigInteger theDenominatorExclusion;
            theDenominatorExclusion = this.getDenominatorExclusion();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "denominatorExclusion", theDenominatorExclusion), currentHashCode, theDenominatorExclusion);
        }
        {
            BigDecimal theMeasureScore;
            theMeasureScore = this.getMeasureScore();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "measureScore", theMeasureScore), currentHashCode, theMeasureScore);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            String theId;
            theId = this.getId();
            strategy.appendField(locator, this, "id", buffer, theId);
        }
        {
            BigInteger theInitialPopulation;
            theInitialPopulation = this.getInitialPopulation();
            strategy.appendField(locator, this, "initialPopulation", buffer, theInitialPopulation);
        }
        {
            BigInteger theDenominator;
            theDenominator = this.getDenominator();
            strategy.appendField(locator, this, "denominator", buffer, theDenominator);
        }
        {
            BigInteger theNumerator;
            theNumerator = this.getNumerator();
            strategy.appendField(locator, this, "numerator", buffer, theNumerator);
        }
        {
            BigInteger theDenominatorExclusion;
            theDenominatorExclusion = this.getDenominatorExclusion();
            strategy.appendField(locator, this, "denominatorExclusion", buffer, theDenominatorExclusion);
        }
        {
            BigDecimal theMeasureScore;
            theMeasureScore = this.getMeasureScore();
            strategy.appendField(locator, this, "measureScore", buffer, theMeasureScore);
        }
        return buffer;
    }

}
